<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on My Super Juicy Blog</title><link>http://10.179.5.96:33000/posts/</link><description>Recent content in Posts on My Super Juicy Blog</description><generator>Hugo -- 0.142.0</generator><language>en</language><lastBuildDate>Sat, 01 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://10.179.5.96:33000/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>What is GitOps</title><link>http://10.179.5.96:33000/posts/what-is-gitops/</link><pubDate>Sat, 01 Feb 2025 00:00:00 +0000</pubDate><guid>http://10.179.5.96:33000/posts/what-is-gitops/</guid><description>&lt;h2 id="what-is">What is?&lt;/h2>
&lt;p>A way to mange infrastructure by using Git as the single control centre. Instead of manually setting up or updating the system, config file that describe the system is stored on Git. When these files are change, automation tools (Argo CD or Flux) will automatically update the systems to match the new config.&lt;/p>
&lt;p>It makes the deployment consistent, easy to track (version control), and quick to roll back if something goes wrong.&lt;/p></description></item><item><title>Blog Development</title><link>http://10.179.5.96:33000/posts/blog-development/</link><pubDate>Wed, 29 Jan 2025 00:00:00 +0000</pubDate><guid>http://10.179.5.96:33000/posts/blog-development/</guid><description>&lt;h2 id="road-map">Road Map&lt;/h2>
&lt;p>![[Pasted image 20250129191000.png]]&lt;/p>
&lt;h2 id="step-1-obsidian">Step 1: Obsidian&lt;/h2>
&lt;ul>
&lt;li>Start writing blog in obsidian under a &lt;code>post&lt;/code> folder&lt;/li>
&lt;/ul>
&lt;h2 id="step-2-hugo">Step 2: Hugo&lt;/h2>
&lt;ul>
&lt;li>Use Hugo to turn the markdown in to website code.&lt;/li>
&lt;/ul>
&lt;h3 id="install-go">Install Go&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Download Go for Linux&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget https://go.dev/dl/go1.23.5.linux-arm64.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Remove any previous Go installation&lt;/strong> by deleting the &lt;code>/usr/local/go&lt;/code> folder (if it exists), then extract the archive you just downloaded into &lt;code>/usr/local&lt;/code>, creating a fresh Go tree in &lt;code>/usr/local/go&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>rm -rf /usr/local/go &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> tar -C /usr/local -xzf go1.23.5.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Add &lt;code>/usr/local/go/bin&lt;/code> to the &lt;code>PATH&lt;/code> environment variable.&lt;/p></description></item><item><title>TestBlog</title><link>http://10.179.5.96:33000/posts/testblog/</link><pubDate>Tue, 28 Jan 2025 00:00:00 +0000</pubDate><guid>http://10.179.5.96:33000/posts/testblog/</guid><description>&lt;h1 id="hello-world-this-is-my-first-blog-post">Hello world! This is my first blog post!!!&lt;/h1></description></item><item><title/><link>http://10.179.5.96:33000/posts/neural-networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://10.179.5.96:33000/posts/neural-networks/</guid><description>&lt;p>#extra&lt;/p>
&lt;p>A &lt;strong>neural network&lt;/strong> is a machine learning model inspired by the human brain. It learns patterns from data by processing information through interconnected layers of nodes (neurons).&lt;/p>
&lt;hr>
&lt;h3 id="structure-of-a-neural-network">Structure of a Neural Network:&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Input Layer&lt;/strong>:
&lt;ul>
&lt;li>Takes in the data features (e.g., height, weight, color).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Hidden Layers&lt;/strong>:
&lt;ul>
&lt;li>Contains multiple neurons that process the data using mathematical operations (e.g., weighted sums, activations).&lt;/li>
&lt;li>These layers find complex patterns in the data.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Output Layer&lt;/strong>:
&lt;ul>
&lt;li>Produces the final result (e.g., classification or prediction).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="how-it-works">How It Works:&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Input&lt;/strong>: Data flows into the network through the input layer.&lt;/li>
&lt;li>&lt;strong>Weights&lt;/strong>: Each connection has a &amp;ldquo;weight&amp;rdquo; that controls how much influence one neuron has on another.&lt;/li>
&lt;li>&lt;strong>Activation Function&lt;/strong>: Non-linear functions (e.g., ReLU, sigmoid) decide if a neuron &amp;ldquo;activates&amp;rdquo; or passes information forward.&lt;/li>
&lt;li>&lt;strong>Output&lt;/strong>: After passing through layers, the output is compared to the actual result to calculate error.&lt;/li>
&lt;li>&lt;strong>Learning&lt;/strong>:
&lt;ul>
&lt;li>The network adjusts its weights using an algorithm like &lt;strong>backpropagation&lt;/strong> and &lt;strong>gradient descent&lt;/strong> to reduce the error.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="key-concepts">Key Concepts:&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Training&lt;/strong>: Process of finding the best weights using data.&lt;/li>
&lt;li>&lt;strong>Epochs&lt;/strong>: One full pass of the dataset through the network.&lt;/li>
&lt;li>&lt;strong>Loss Function&lt;/strong>: Measures the error (difference between predicted and actual values).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="pros">Pros:&lt;/h3>
&lt;ul>
&lt;li>Can handle complex, non-linear relationships.&lt;/li>
&lt;li>Performs well on images, text, audio, etc.&lt;/li>
&lt;/ul>
&lt;h3 id="cons">Cons:&lt;/h3>
&lt;ul>
&lt;li>Needs a lot of data and computational power.&lt;/li>
&lt;li>Hard to interpret (like a &amp;ldquo;black box&amp;rdquo;).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="example">Example:&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Image Classification&lt;/strong>: A neural network can learn to recognize cats in photos by analyzing patterns like edges, shapes, and textures in the image.&lt;/li>
&lt;/ul></description></item></channel></rss>